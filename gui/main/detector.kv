#:import SlideTransition kivy.uix.screenmanager.SlideTransition

# --------------
# Screen Manager
# --------------

ScreenManagement:
    transition: SlideTransition(duration=.5)

    MainScreen:

    DetectImageScreen:
    ImageResultScreen:

    DetectFolderScreen:
    FolderResultScreen:

    DetectVideoScreen:
    VideoResultScreen:

    DetectWebcamScreen:
    WebcamResultScreen:


# -----------------
# Custom Components
# -----------------

<RoundedGrayButton@Button>:
    background_color: 0,0,0,0  # the last zero is the critical on, make invisible
    font_size: 25
    markup: True
    canvas.before:
        Color:
            rgba: (.4,.4,.4,1) if self.state=='normal' else (0.25,.25,.25,1)  # visual feedback of press
        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [50,]


<BigButton@Button>:
    font_size: 100
    halign: 'center'
    background_normal: ''
    markup: True
    background_normal: 'resources/button_normal.png'
    background_down: 'resources/button_down.png'


<MediumButton@Button>:
    font_size: 25
    background_color: 1, 0, 0, 1
    background_normal: ''
    markup: True
    background_normal: 'resources/button_normal.png'
    background_down: 'resources/button_down.png'


<DetectButton@Button>:
    text: 'DETECTAR'
    font_size: 80
    background_color: 1.0, .28, .28, 1
    size_hint: (1, .5)
    markup: True
    background_normal: 'resources/button_normal.png'
    background_down: 'resources/button_down.png'


# -----------
# Main Screen
# -----------

<MainScreen>:
    name: 'main'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            Label:
                text: '[b]DETECTOR DE OBJETOS[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1


        GridLayout:
            rows: 2
            cols: 2
            spacing: 50
            padding: 25

            BigButton:
                background_color: .4, .77, .17, 1
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]IMAGEN[/b]')
                on_release:
                    app.root.current = 'detect_image'
                    app.root.transition.direction = 'left'

            BigButton:
                background_color: 0, .66, 1, 1
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]CARPETA[/b]')
                on_release:
                    app.root.current = 'detect_folder'
                    app.root.transition.direction = 'left'

            BigButton:
                background_color: .62, .08, .9, 1
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]VIDEO[/b]')
                on_release:
                    app.root.current = 'detect_video'
                    app.root.transition.direction = 'left'

            BigButton:
                background_color: .9, .08, .35, 1
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]WEBCAM[/b]')
                on_release:
                    app.root.current = 'detect_webcam'
                    app.root.transition.direction = 'left'

# -------------------
# Detect Image Screen
# -------------------

<DetectImageScreen>:
    name: 'detect_image'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .4

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]DETECTAR EN IMAGEN[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        BoxLayout:
            orientation: 'horizontal'
            spacing: 50
            padding: 25
            padding_top: 50

            FileChooserIconView:
                id: filechooser
                filters: ['*.jpg', '*.JPEG', '*.jpeg', '*.png', '*.gif']
                path: '~/'
                on_selection:
                    file_label.text = self.selection and self.selection[0] or ''
                    detect_button.disabled = False

            TabbedPanel:
                do_default_tab: False

                TabbedPanelItem:
                    text: 'Preferencias'

                    BoxLayout:
                        orientation: 'horizontal'
                        spacing: 50
                        padding: 50
                        size_hint_x: 0.5

                        CheckBox:
                            id: confidence_checkbox
                            on_active:
                                root.save_confidence_choice(self, self.active)
                        Label:
                            text: 'Mostrar la confianza de las detecciones'

                TabbedPanelItem:
                    text: 'Salida'

                    GridLayout:
                        cols: 2
                        rows: 5
                        size_hint_x: 0.8

                        CheckBox:
                            id: save_results_checkbox
                            on_active:
                                root.enable_format_checkbox(self, self.active)
                        Label:
                            text: 'Guardar el resultado de la deteccion'

                        CheckBox:
                            group: 'save_format'
                            id: format_json
                        Label:
                            text: 'Guardar el resultado de la deteccion en formato .JSON'

                        CheckBox:
                            group: 'save_format'
                            id: format_txt
                        Label:
                            text: 'Guardar el resultado de la deteccion en formato .TXT'

                        CheckBox:
                            group: 'save_format'
                            id: format_csv
                        Label:
                            text: 'Guardar el resultado de la deteccion en formato .CSV'

                        CheckBox:
                            group: 'save_format'
                            id: format_jpg
                        Label:
                            text: 'Guardar el resultado de la deteccion en formato .JPG'




        BoxLayout:
            orientation: 'vertical'
            spacing: 50
            padding: 25

            Label:
                id: file_label
                text: ''
                halign: 'center'
                background_color: .4, .77, .17, 1
                font_size: 50
                size_hint: 1, 0.3

            DetectButton:
                id: detect_button
                disabled: True

                on_press:
                    root.save_image_path()
                    root.check_image_options()
                    #app.root.current = 'image_result'
                    #app.root.transition.direction = 'left'

# -------------------
# Image Result Screen
# -------------------

<ImageResultScreen>:
    name: 'image_result'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]RESULTADOS[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        GridLayout:
            rows: 2
            cols: 1
            spacing: 50
            padding: 25

            Image:
                id: image_results


# -------------------
# Detect Folder Screen
# -------------------

<DetectFolderScreen>:
    name: 'detect_folder'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]DETECTAR EN CARPETA[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        GridLayout:
            rows: 3
            cols: 1
            spacing: 50
            padding: 25

            FileChooserIconView:
                id: filechooser_folder
                path: '~/'
                dirselect: True
                filters: [root.is_dir]
                on_selection:
                    file_label.text = self.selection and self.selection[0] or ''
                    detect_button.disabled = False

            Label:
                id: file_label
                text: ''
                halign: 'center'
                background_color: .4, .77, .17, 1
                font_size: 50
                size_hint: 1, 0.3


            DetectButton:
                id: detect_button
                disabled: True

                on_press:
                    root.save_folder_path()
                    filechooser_folder.selection = ''
                    detect_button.disabled = True
                    app.root.current = 'folder_result'
                    app.root.transition.direction = 'left'


# --------------------
# Folder Result Screen
# --------------------

<FolderResultScreen>:
    name: 'folder_result'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'
                    progress_bar.value = 0

            Label:
                text: '[b]RESULTADOS[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        GridLayout:
            rows: 3
            cols: 1
            spacing: 50
            padding: 25

            Label:
                font_size: 350
                color: .2, .89, .4, 1
                id: percentage_text


            Label:
                font_size: 50
                id: progress_text
                size_hint: 1, .3


            ProgressBar:
                id: progress_bar
                value: 0
                max: 100
                size_hint: 1, .3


# -------------------
# Detect Video Screen
# -------------------

<DetectVideoScreen>:
    name: 'detect_video'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]DETECTAR EN VIDEO[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        GridLayout:
            rows: 3
            cols: 1
            spacing: 50
            padding: 25

            BoxLayout:
                orientation: 'horizontal'

                FileChooserIconView:
                    id: filechooser
                    filters: ['*.mp4', '*.avi']
                    path: '~/'
                    on_selection:
                        file_label.text = self.selection and self.selection[0] or ''
                        detect_button.disabled = False

                TabbedPanel:
                    do_default_tab: False

                    TabbedPanelItem:
                        text: 'Preferencias'
                        GridLayout:
                            rows: 2
                            cols: 2

                            Label:
                                text: 'Sonido de notifiaciones'

                            Switch:
                                id: switch_sound_notifications
                                on_active:
                                    root.switch_toggle(self, self.active)

            Label:
                id: file_label
                text: 'Seleccione un archivo de video'
                halign: 'center'
                color: .77, .77, .77, 1
                font_size: 50
                size_hint: 1, 0.3

            DetectButton:
                id: detect_button
                disabled: True

                on_press:
                    root.save_video_path()
                    app.root.current = 'video_result'
                    app.root.transition.direction = 'left'

# -------------------
# Video Result Screen
# -------------------

<VideoResultScreen>:
    name: 'video_result'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:

            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]RESULTADOS[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        BoxLayout:
            orientation: 'horizontal'

            padding: 100
            spacing: 100

            BigButton:
                background_color: .4, .77, .17, 1
                padding: (100, 100)
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]VOLVER A\nDETECTAR[/b]')
                on_release:
                    root.start_detection_thread()

            BigButton:
                background_color: .77, .44, .17, 1
                padding: (100, 100)
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]INICIO[/b]')
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'


# --------------------
# Detect Webcam Screen
# --------------------

<DetectWebcamScreen>:
    name: 'detect_webcam'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]DETECTAR EN WEBCAM[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        BoxLayout:
            orientation: 'vertical'
            spacing: 100
            padding: 100

            BoxLayout:
                orientation: 'horizontal'
                spacing: 100
                padding: 10

                TabbedPanel:
                    do_default_tab: False

                    TabbedPanelItem:
                        text: 'Entrada'
                        GridLayout:
                            rows: 3
                            cols: 3
                            padding: 50
                            spacing: 50

                            Widget:
                            Label:
                                text: 'Seleccione una entrada de video'
                                font_size: 30
                            Widget:


                            CheckBox:
                                group: 'input_select'
                                id: checkbox_input_webcam
                            Label:
                                text: 'Webcam'
                            TextInput:
                                hint_text: '0'
                                input_filter: 'int'
                                id: text_input_webcam

                            CheckBox:
                                group: 'input_select'
                                id: checkbox_input_url
                            Label:
                                text: 'URL'
                            TextInput:
                                hint_text: 'rtsp://192.168.0.102:8554/live.sdp'
                                id: text_input_url

                TabbedPanel:
                    do_default_tab: False

                    TabbedPanelItem:
                        text: 'Preferencias'
                        GridLayout:
                            rows: 2
                            cols: 2

                            Label:
                                text: 'Sonido de notifiaciones'

                            Switch:
                                id: switch_sound_notifications
                                on_active:
                                    root.switch_toggle(self, self.active)

            DetectButton:
                id: detect_button
                disabled: False

                on_press:
                    root.check_input_feed()
                    #app.root.current = 'webcam_result'
                    #app.root.transition.direction = 'left'


# --------------------
# Webcam Result Screen
# --------------------

<WebcamResultScreen>:
    name: 'webcam_result'

    BoxLayout:
        orientation: 'vertical'

        padding: 25
        spacing: 10

        BoxLayout:

            orientation: 'horizontal'
            size_hint: 1, .2

            RoundedGrayButton:
                text: ('[font=resources/FontAwesome.otf][size=100][/size][/font]')
                size_hint: .1, 1
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'

            Label:
                text: '[b]RESULTADOS[/b]'
                markup: True
                color: .85, .85, .85, 1
                font_size: 120
                size_hint: 1, 1


        BoxLayout:
            orientation: 'horizontal'

            padding: 100
            spacing: 100

            BigButton:
                background_color: .4, .77, .17, 1
                padding: (100, 100)
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]VOLVER A\nDETECTAR[/b]')
                on_release:
                    root.start_detection_thread()

            BigButton:
                background_color: .77, .44, .17, 1
                padding: (100, 100)
                text: ('[font=resources/FontAwesome.otf][size=135][/size][/font]\n[b]INICIO[/b]')
                on_release:
                    app.root.current = 'main'
                    app.root.transition.direction = 'right'
